{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\Side\\\\tx-temp-side-front\\\\src\\\\components\\\\Maps\\\\MapsContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useAsync } from \"react-async\";\nimport MapsPresenter from './MapsPresenter';\nimport apiService from '../../service/apiService.js';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapsContainer = props => {\n  _s();\n\n  let {\n    data: vesselList\n  } = useAsync({\n    promiseFn: apiService.callVesselList,\n    locationId: 105160\n  });\n  const {\n    data: portList\n  } = useAsync({\n    promiseFn: apiService.callPortList\n  });\n  let position = [35.0728, 128.8060];\n  let changePosition;\n  let zoom = 12;\n  const purpleOptions = {\n    color: 'purple'\n  };\n\n  if (props.vesselList) {\n    vesselList.data = props.vesselList;\n    changePosition = [props.vesselList.latitude, props.vesselList.longitude];\n  }\n\n  return /*#__PURE__*/_jsxDEV(MapsPresenter, {\n    position: position,\n    changePosition: changePosition,\n    zoom: zoom,\n    purpleOptions: purpleOptions,\n    vesselList: vesselList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapsContainer, \"XcCZUYRjcEmT9YyhEc8oGsYFGpY=\", false, function () {\n  return [useAsync, useAsync];\n});\n\n_c = MapsContainer;\n\nfunction getVesslList(state) {\n  return {\n    vesselList: state\n  };\n}\n\nexport default connect(getVesslList)(MapsContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapsContainer\");","map":{"version":3,"sources":["C:/workspace/Side/tx-temp-side-front/src/components/Maps/MapsContainer.jsx"],"names":["React","useAsync","MapsPresenter","apiService","connect","MapsContainer","props","data","vesselList","promiseFn","callVesselList","locationId","portList","callPortList","position","changePosition","zoom","purpleOptions","color","latitude","longitude","getVesslList","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,MAAI;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAuBP,QAAQ,CAAC;AAAEQ,IAAAA,SAAS,EAAEN,UAAU,CAACO,cAAxB;AAAwCC,IAAAA,UAAU,EAAC;AAAnD,GAAD,CAAnC;AACA,QAAM;AAAEJ,IAAAA,IAAI,EAAEK;AAAR,MAAqBX,QAAQ,CAAC;AAAEQ,IAAAA,SAAS,EAAEN,UAAU,CAACU;AAAxB,GAAD,CAAnC;AACA,MAAIC,QAAQ,GAAG,CAAC,OAAD,EAAU,QAAV,CAAf;AACA,MAAIC,cAAJ;AACA,MAAIC,IAAI,GAAG,EAAX;AAEA,QAAMC,aAAa,GAAG;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAtB;;AAEA,MAAGZ,KAAK,CAACE,UAAT,EAAoB;AAChBA,IAAAA,UAAU,CAACD,IAAX,GAAkBD,KAAK,CAACE,UAAxB;AAEAO,IAAAA,cAAc,GAAG,CAACT,KAAK,CAACE,UAAN,CAAiBW,QAAlB,EAA4Bb,KAAK,CAACE,UAAN,CAAiBY,SAA7C,CAAjB;AACH;;AAED,sBACI,QAAC,aAAD;AACI,IAAA,QAAQ,EAAEN,QADd;AAEI,IAAA,cAAc,EAAEC,cAFpB;AAGI,IAAA,IAAI,EAAEC,IAHV;AAII,IAAA,aAAa,EAAEC,aAJnB;AAKI,IAAA,UAAU,EAAET;AALhB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAxBD;;GAAMH,a;UACyBJ,Q,EACAA,Q;;;KAFzBI,a;;AA0BN,SAASgB,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,SAAO;AACHd,IAAAA,UAAU,EAAGc;AADV,GAAP;AAGH;;AAED,eAAelB,OAAO,CAACiB,YAAD,CAAP,CAAsBhB,aAAtB,CAAf","sourcesContent":["import React from 'react';\r\nimport { useAsync } from \"react-async\"\r\nimport MapsPresenter from './MapsPresenter';\r\nimport apiService from '../../service/apiService.js';\r\nimport {connect} from 'react-redux';\r\n\r\nconst MapsContainer = (props) => {\r\n    let { data: vesselList } = useAsync({ promiseFn: apiService.callVesselList, locationId:105160 });\r\n    const { data: portList } = useAsync({ promiseFn: apiService.callPortList });\r\n    let position = [35.0728, 128.8060];\r\n    let changePosition;\r\n    let zoom = 12;\r\n\r\n    const purpleOptions = { color: 'purple' }\r\n    \r\n    if(props.vesselList){\r\n        vesselList.data = props.vesselList;\r\n\r\n        changePosition = [props.vesselList.latitude, props.vesselList.longitude];\r\n    }\r\n\r\n    return (\r\n        <MapsPresenter\r\n            position={position}\r\n            changePosition={changePosition}\r\n            zoom={zoom}\r\n            purpleOptions={purpleOptions}\r\n            vesselList={vesselList}\r\n        />\r\n    );\r\n};\r\n\r\nfunction getVesslList(state) {\r\n    return {\r\n        vesselList : state\r\n    }\r\n} \r\n\r\nexport default connect(getVesslList)(MapsContainer);"]},"metadata":{},"sourceType":"module"}