{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\Side\\\\tx-temp-side-front\\\\src\\\\components\\\\Maps\\\\MapsPresenter.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport '../../styles/scss/Maps.scss';\nimport { MapContainer, TileLayer, Polygon, Circle, useMapEvent } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LocationMarker() {\n  _s();\n\n  const [position, setPosition] = useState(null);\n  const map = useMapEvents({\n    click() {\n      map.locate();\n    },\n\n    locationfound(e) {\n      setPosition(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n    }\n\n  });\n  return position === null ? null : /*#__PURE__*/_jsxDEV(Marker, {\n    position: position,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: \"You are here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocationMarker, \"Z+4nsYfm7MoZ42b9yWfecTtPTPw=\", true);\n\n_c = LocationMarker;\n\nconst MapsPresenter = props => {\n  const {\n    position,\n    changePosition,\n    zoom,\n    // multiPolygon,\n    purpleOptions,\n    vesselList\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      className: \"Maps\",\n      center: changePosition ? changePosition : position,\n      zoom: zoom,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), vesselList ? vesselList.data.map((vessel, index) => {\n        const multiPolygon = [[[vessel.latitude + 0.0012 * Math.sin(vessel.heading), vessel.longitude + 0.0012 * Math.cos(vessel.heading)], [vessel.latitude, vessel.longitude], [vessel.latitude, vessel.longitude], [vessel.latitude, vessel.longitude], [vessel.latitude, vessel.longitude]]];\n        console.log(\"heading : \" + vessel.heading);\n        console.log(\"sin : \" + Math.sin(vessel.heading * 3.14 / 180));\n        return (\n          /*#__PURE__*/\n          // <Polygon key={index} pathOptions={purpleOptions} positions={multiPolygon} />\n          _jsxDEV(Circle, {\n            center: [vessel.latitude, vessel.longitude],\n            radius: 60\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        );\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(LocationMarker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = MapsPresenter;\nexport default MapsPresenter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocationMarker\");\n$RefreshReg$(_c2, \"MapsPresenter\");","map":{"version":3,"sources":["C:/workspace/Side/tx-temp-side-front/src/components/Maps/MapsPresenter.jsx"],"names":["React","useState","MapContainer","TileLayer","Polygon","Circle","useMapEvent","LocationMarker","position","setPosition","map","useMapEvents","click","locate","locationfound","e","latlng","flyTo","getZoom","MapsPresenter","props","changePosition","zoom","purpleOptions","vesselList","data","vessel","index","multiPolygon","latitude","Math","sin","heading","longitude","cos","console","log"],"mappings":"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","sourcesContent":["import {React, useState} from 'react';\r\nimport '../../styles/scss/Maps.scss'\r\nimport { MapContainer, TileLayer, Polygon, Circle, useMapEvent } from \"react-leaflet\";\r\n\r\nfunction LocationMarker() {\r\n  const [position, setPosition] = useState(null)\r\n  const map = useMapEvents({\r\n    click() {\r\n      map.locate()\r\n    },\r\n    locationfound(e) {\r\n      setPosition(e.latlng)\r\n      map.flyTo(e.latlng, map.getZoom())\r\n    },\r\n  })\r\n\r\n  return position === null ? null : (\r\n    <Marker position={position}>\r\n      <Popup>You are here</Popup>\r\n    </Marker>\r\n  )\r\n}\r\n\r\n\r\nconst MapsPresenter = (props) => {\r\n  const {\r\n    position,\r\n    changePosition,\r\n    zoom,\r\n    // multiPolygon,\r\n    purpleOptions,\r\n    vesselList\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <MapContainer\r\n        className=\"Maps\"\r\n        center={changePosition ? changePosition : position}\r\n        zoom={zoom}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {\r\n          vesselList ? vesselList.data.map((vessel, index) => {\r\n            const multiPolygon = [\r\n              [\r\n                [vessel.latitude + 0.0012 * Math.sin(vessel.heading), vessel.longitude + 0.0012 * Math.cos(vessel.heading)],\r\n                [vessel.latitude, vessel.longitude],\r\n                [vessel.latitude, vessel.longitude],\r\n                [vessel.latitude, vessel.longitude],\r\n                [vessel.latitude, vessel.longitude],\r\n              ],\r\n            ]\r\n            console.log(\"heading : \" + vessel.heading);\r\n            console.log(\"sin : \" + Math.sin(vessel.heading * 3.14 / 180));\r\n            return (\r\n              // <Polygon key={index} pathOptions={purpleOptions} positions={multiPolygon} />\r\n              <Circle key={index} center={[vessel.latitude, vessel.longitude]} radius={60} />\r\n            )\r\n          }) : <div></div>\r\n        }\r\n        <LocationMarker/>\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapsPresenter;\r\n"]},"metadata":{},"sourceType":"module"}