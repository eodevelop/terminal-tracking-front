{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\Side\\\\tx-temp-side-front\\\\src\\\\components\\\\Maps\\\\MapsPresenter.jsx\";\nimport React from 'react';\nimport '../../styles/scss/Maps.scss';\nimport { MapContainer, TileLayer, Polygon } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapsPresenter = props => {\n  const {\n    position,\n    zoom,\n    // multiPolygon,\n    purpleOptions,\n    vesselList\n  } = props;\n  console.log(vesselList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      className: \"Maps\",\n      center: position,\n      zoom: zoom,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), vesselList ? vesselList.data.map((vessel, index) => {\n        const multiPolygon = [[[vessel.latitude, vessel.longitude], [vessel.latitude, vessel.longitude], [vessel.latitude, vessel.longitude], [vessel.latitude, vessel.longitude], [vessel.latitude, vessel.longitude]]];\n        console.log(\"heading : \" + vessel.heading);\n        console.log(\"sin : \" + Math.sin(vessel.heading * 3.14));\n        return /*#__PURE__*/_jsxDEV(Polygon, {\n          pathOptions: purpleOptions,\n          positions: multiPolygon\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MapsPresenter;\nexport default MapsPresenter;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapsPresenter\");","map":{"version":3,"sources":["C:/workspace/Side/tx-temp-side-front/src/components/Maps/MapsPresenter.jsx"],"names":["React","MapContainer","TileLayer","Polygon","MapsPresenter","props","position","zoom","purpleOptions","vesselList","console","log","data","map","vessel","index","multiPolygon","latitude","longitude","heading","Math","sin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,OAAlC,QAAiD,eAAjD;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,IAFI;AAGJ;AACAC,IAAAA,aAJI;AAKJC,IAAAA;AALI,MAMFJ,KANJ;AAQAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAEA,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,MAAM,EAAEH,QAFV;AAGE,MAAA,IAAI,EAAEC,IAHR;AAAA,8BAKE,QAAC,SAAD;AACE,QAAA,WAAW,EAAC,0EADd;AAEE,QAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,cALF,EAUIE,UAAU,GAAGA,UAAU,CAACG,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClD,cAAMC,YAAY,GAAG,CACnB,CACE,CAACF,MAAM,CAACG,QAAR,EAAkBH,MAAM,CAACI,SAAzB,CADF,EAEE,CAACJ,MAAM,CAACG,QAAR,EAAkBH,MAAM,CAACI,SAAzB,CAFF,EAGE,CAACJ,MAAM,CAACG,QAAR,EAAkBH,MAAM,CAACI,SAAzB,CAHF,EAIE,CAACJ,MAAM,CAACG,QAAR,EAAkBH,MAAM,CAACI,SAAzB,CAJF,EAKE,CAACJ,MAAM,CAACG,QAAR,EAAkBH,MAAM,CAACI,SAAzB,CALF,CADmB,CAArB;AASAR,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAeG,MAAM,CAACK,OAAlC;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAWS,IAAI,CAACC,GAAL,CAASP,MAAM,CAACK,OAAP,GAAiB,IAA1B,CAAvB;AACA,4BACE,QAAC,OAAD;AAAqB,UAAA,WAAW,EAAEX,aAAlC;AAAiD,UAAA,SAAS,EAAEQ;AAA5D,WAAcD,KAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAfY,CAAH,gBAeL;AAAA;AAAA;AAAA;AAAA,cAzBT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA3CD;;KAAMX,a;AA6CN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport '../../styles/scss/Maps.scss'\r\nimport { MapContainer, TileLayer, Polygon } from \"react-leaflet\";\r\n\r\nconst MapsPresenter = (props) => {\r\n  const {\r\n    position,\r\n    zoom,\r\n    // multiPolygon,\r\n    purpleOptions,\r\n    vesselList\r\n  } = props;\r\n\r\n  console.log(vesselList);\r\n\r\n  return (\r\n    <div>\r\n      <MapContainer\r\n        className=\"Maps\"\r\n        center={position}\r\n        zoom={zoom}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {\r\n          vesselList ? vesselList.data.map((vessel, index) => {\r\n            const multiPolygon = [\r\n              [\r\n                [vessel.latitude, vessel.longitude],\r\n                [vessel.latitude, vessel.longitude],\r\n                [vessel.latitude, vessel.longitude],\r\n                [vessel.latitude, vessel.longitude],\r\n                [vessel.latitude, vessel.longitude],\r\n              ],\r\n            ]\r\n            console.log(\"heading : \" + vessel.heading);\r\n            console.log(\"sin : \" + Math.sin(vessel.heading * 3.14));\r\n            return (\r\n              <Polygon key={index} pathOptions={purpleOptions} positions={multiPolygon} />\r\n            )\r\n          }) : <div></div>\r\n        }\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapsPresenter;\r\n"]},"metadata":{},"sourceType":"module"}