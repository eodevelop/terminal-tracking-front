{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\Side\\\\tx-temp-side-front\\\\src\\\\components\\\\Maps\\\\MapsPresenter.jsx\";\nimport React from 'react';\nimport '../../styles/scss/Maps.scss';\nimport { MapContainer, TileLayer, Polygon } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapsPresenter = props => {\n  const {\n    position,\n    zoom,\n    multiPolygon,\n    purpleOptions,\n    vesselList\n  } = props;\n  console.log(vesselList);\n\n  if (vesselList) {\n    let latitude = 0;\n    let longitude = 0;\n    vesselList.forEach(vessel => {\n      latitude += vessel.latitude;\n      longitude += vessel.longitude;\n    });\n    latitude /= vesselList.length;\n    longitude /= vesselList.length;\n    position = [latitude, longitude];\n    console.log(position);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      className: \"Maps\",\n      center: position,\n      zoom: zoom,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), vesselList ? vesselList.data.map((vessel, index) => {\n        return /*#__PURE__*/_jsxDEV(Polygon, {\n          pathOptions: purpleOptions,\n          positions: multiPolygon\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MapsPresenter;\nexport default MapsPresenter;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapsPresenter\");","map":{"version":3,"sources":["C:/workspace/Side/tx-temp-side-front/src/components/Maps/MapsPresenter.jsx"],"names":["React","MapContainer","TileLayer","Polygon","MapsPresenter","props","position","zoom","multiPolygon","purpleOptions","vesselList","console","log","latitude","longitude","forEach","vessel","length","data","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,OAAlC,QAAiD,eAAjD;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ;AAQAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AAEA,MAAGA,UAAH,EAAc;AACZ,QAAIG,QAAQ,GAAG,CAAf;AACA,QAAIC,SAAS,GAAG,CAAhB;AAEAJ,IAAAA,UAAU,CAACK,OAAX,CAAmBC,MAAM,IAAI;AACzBH,MAAAA,QAAQ,IAAIG,MAAM,CAACH,QAAnB;AACAC,MAAAA,SAAS,IAAIE,MAAM,CAACF,SAApB;AACH,KAHD;AAKAD,IAAAA,QAAQ,IAAIH,UAAU,CAACO,MAAvB;AACAH,IAAAA,SAAS,IAAIJ,UAAU,CAACO,MAAxB;AAEAX,IAAAA,QAAQ,GAAG,CAACO,QAAD,EAAWC,SAAX,CAAX;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACH;;AAEC,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,MAAM,EAAEA,QAFV;AAGE,MAAA,IAAI,EAAEC,IAHR;AAAA,8BAKE,QAAC,SAAD;AACE,QAAA,WAAW,EAAC,0EADd;AAEE,QAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,cALF,EAUIG,UAAU,GAAGA,UAAU,CAACQ,IAAX,CAAgBC,GAAhB,CAAoB,CAACH,MAAD,EAASI,KAAT,KAAmB;AAClD,4BACE,QAAC,OAAD;AAAqB,UAAA,WAAW,EAAEX,aAAlC;AAAiD,UAAA,SAAS,EAAED;AAA5D,WAAcY,KAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJY,CAAH,gBAIL;AAAA;AAAA;AAAA;AAAA,cAdT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAjDD;;KAAMhB,a;AAmDN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport '../../styles/scss/Maps.scss'\r\nimport { MapContainer, TileLayer, Polygon } from \"react-leaflet\";\r\n\r\nconst MapsPresenter = (props) => {\r\n  const {\r\n    position,\r\n    zoom,\r\n    multiPolygon,\r\n    purpleOptions,\r\n    vesselList\r\n  } = props;\r\n\r\n  console.log(vesselList);\r\n\r\n  if(vesselList){\r\n    let latitude = 0;\r\n    let longitude = 0;\r\n\r\n    vesselList.forEach(vessel => {\r\n        latitude += vessel.latitude;\r\n        longitude += vessel.longitude\r\n    });\r\n\r\n    latitude /= vesselList.length;\r\n    longitude /= vesselList.length;\r\n\r\n    position = [latitude, longitude];\r\n\r\n    console.log(position); \r\n}\r\n\r\n  return (\r\n    <div>\r\n      <MapContainer\r\n        className=\"Maps\"\r\n        center={position}\r\n        zoom={zoom}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {\r\n          vesselList ? vesselList.data.map((vessel, index) => {\r\n            return (\r\n              <Polygon key={index} pathOptions={purpleOptions} positions={multiPolygon} />\r\n            )\r\n          }) : <div></div>\r\n        }\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapsPresenter;\r\n"]},"metadata":{},"sourceType":"module"}